version: '3'
services:
  config-service:
    build: ../config-service/
    ports:
      - "${CONF_SERVICE_PORT}:${CONF_SERVICE_PORT}"
    container_name: config-service
    restart: unless-stopped
  user-ms:
    #image: docker.io/library/user-microservice:1.0
    build: .
    ports:
      - "${USERMS_PORT}:${USERMS_PORT}"
    container_name: user-ms
    restart: unless-stopped
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    #command:
    #  - mongodb --host mongodb --eval  "db.getSiblingDB('user-ms').createUser({user:'default_user', pwd:'password', roles:[{role:'readWrite',db:'user-ms'}]});"
    env_file:
      - .env
    depends_on:
      - mongodb
      - config-service
    #networks:
    #  - user
  mongodb:
    image: mongo
    restart: unless-stopped
    container_name: mongodb
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
    #networks:
    #  - user
  mongo-express:
    image: mongo-express
    restart: unless-stopped
    container_name: mongo-express
    depends_on:
      - mongodb
    ports:
      - "${MONGOEXPRESS_PORT}:${MONGOEXPRESS_PORT}"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    #networks:
    #  - user
  postgres:
    image: postgres:14.1-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    container_name: postgres
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - postgres:/var/lib/postgresql/data
#    networks:
#      - user
  user-crud:
    #image: micro.org/library/user-crud:latest
    build: ../user-crud/
    restart: unless-stopped
    container_name: user-crud
    depends_on:
      - postgres
    ports:
      - '${USER_CRUD_PORT}:${USER_CRUD_PORT}'
#    networks:
#      - user

volumes:
  postgres:
    driver: local
#networks:
#  user: